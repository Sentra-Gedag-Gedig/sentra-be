version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - golang-app
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-sentra:
    image: redis:alpine
    container_name: redis-sentra
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  golang-app:
    image: ${DOCKER_HUB_USERNAME}/sentra-backend:latest
    container_name: golang-app
    env_file:
      - .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./private.key:/app/private.key:ro
    depends_on:
      - postgres
      - redis-sentra
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: