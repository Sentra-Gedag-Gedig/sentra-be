services:
  nginx:
        image: nginx:1.23.1-alpine
        container_name: nginx
        ports:
          - "80:80"
        volumes:
          - ./nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
        restart: unless-stopped
        depends_on:
          golang-app:
            condition: service_healthy

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER:-tyokeren}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-14Oktober04}
      POSTGRES_DB: ${DB_NAME:-tyokeren}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-tyokeren}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  golang-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: golang-app
    environment:
      - DB_USER=${DB_USER:-tyokeren}
      - DB_PASSWORD=${DB_PASSWORD:-14Oktober04}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-tyokeren}
      - REDIS_ADDRESS=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispassword}
      # Modifikasi URL untuk mengarah ke layanan AI lokal Anda
      - WEBSOCKET_URL=${AI_FACE_DETECTION_URL:-ws://your-ngrok-subdomain.ngrok.io/api/v1/detect/ws}
      - KTP_WEBSOCKET_URL=${AI_KTP_DETECTION_URL:-ws://your-ngrok-subdomain.ngrok.io/api/v1/ktp/ws}
      - QRIS_WEBSOCKET_URL=${AI_QRIS_DETECTION_URL:-ws://your-ngrok-subdomain.ngrok.io/api/v1/qris/ws}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: