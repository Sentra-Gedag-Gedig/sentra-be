services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - golang-app
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-sentra:
    image: redis:alpine
    container_name: redis-sentra
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  golang-app:
    image: ${DOCKER_HUB_USERNAME}/sentra-backend:latest
    container_name: golang-app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - REDIS_ADDRESS=redis-sentra:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # AI service URLs from environment (which will come from GitHub secrets)
      - AI_FACE_DETECTION_URL=${AI_FACE_DETECTION_URL}
      - AI_KTP_DETECTION_URL=${AI_KTP_DETECTION_URL}
      - AI_QRIS_DETECTION_URL=${AI_QRIS_DETECTION_URL}
      - AI_FACE_DETECTION_WS_URL=${AI_FACE_DETECTION_WS_URL}
      - AI_KTP_DETECTION_WS_URL=${AI_KTP_DETECTION_WS_URL}
      - AI_QRIS_DETECTION_WS_URL=${AI_QRIS_DETECTION_WS_URL}
      # All other required env vars
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_STATE=${GOOGLE_STATE}
      - SMTP_MAIL=${SMTP_MAIL}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL_NAME=${GEMINI_MODEL_NAME}
      - DOKU_CLIENT_ID=${DOKU_CLIENT_ID}
      - DOKU_SECRET_KEY=${DOKU_SECRET_KEY}
      - DOKU_IS_PRODUCTION=${DOKU_IS_PRODUCTION}
      - DOKU_PUBLIC_KEY=${DOKU_PUBLIC_KEY}
      - PASSPHRASE=${PASSPHRASE}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis-sentra:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: