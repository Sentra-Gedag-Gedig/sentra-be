name: CI/CD Pipeline for Sentra Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
  # [previous build and test steps remain the same]

  deploy:
    needs: build-and-test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Generate Nginx config from template
        run: |
          export DOLLAR='$'
          envsubst < nginx/conf.d/default.conf.template > nginx/conf.d/nginx.conf
        env:
          AI_FACE_DETECTION_URL: ${{ secrets.AI_FACE_DETECTION_URL }}
          AI_KTP_DETECTION_URL: ${{ secrets.AI_KTP_DETECTION_URL }}
          AI_QRIS_DETECTION_URL: ${{ secrets.AI_QRIS_DETECTION_URL }}
          AI_FACE_DETECTION_WS_URL: ${{ secrets.AI_FACE_DETECTION_WS_URL }}
          AI_KTP_DETECTION_WS_URL: ${{ secrets.AI_KTP_DETECTION_WS_URL }}
          AI_QRIS_DETECTION_WS_URL: ${{ secrets.AI_QRIS_DETECTION_WS_URL }}

      - name: Prepare deploy directory on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.BIZNET_SSH_KEY }}
          script: |
            mkdir -p ~/sentra-app/nginx/conf.d
            mkdir -p ~/sentra-app/nginx/logs

      - name: Copy Nginx config
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.BIZNET_SSH_KEY }}
          source: "nginx/conf.d/nginx.conf"
          target: "~/sentra-app"
          strip_components: 0

      - name: Copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.BIZNET_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/sentra-app"

      - name: Create .env file
        run: |
          cat > .env <<EOL
          # Database Config
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_SSLMODE=${{ secrets.DB_SSLMODE }}
          
          # Environment config
          PRODUCTION=true
          APP_PORT=${{ secrets.APP_PORT }}
          APP_ADDR=${{ secrets.APP_ADDR }}
          
          JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
          
          # Google OAuth2
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_STATE=${{ secrets.GOOGLE_STATE }}
          
          # Redis
          REDIS_DB=${{ secrets.REDIS_DB }}
          REDIS_ADDRESS=${{ secrets.REDIS_ADDRESS }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          
          # SMTP
          SMTP_MAIL=${{ secrets.SMTP_MAIL }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          
          # AI Services URLs
          AI_FACE_DETECTION_URL=${{ secrets.AI_FACE_DETECTION_URL }}
          AI_KTP_DETECTION_URL=${{ secrets.AI_KTP_DETECTION_URL }}
          AI_QRIS_DETECTION_URL=${{ secrets.AI_QRIS_DETECTION_URL }}
          AI_FACE_DETECTION_WS_URL=${{ secrets.AI_FACE_DETECTION_WS_URL }}
          AI_KTP_DETECTION_WS_URL=${{ secrets.AI_KTP_DETECTION_WS_URL }}
          AI_QRIS_DETECTION_WS_URL=${{ secrets.AI_QRIS_DETECTION_WS_URL }}
          
          # Gemini
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL_NAME=${{ secrets.GEMINI_MODEL_NAME }}
          
          # Doku
          DOKU_CLIENT_ID=${{ secrets.DOKU_CLIENT_ID }}
          DOKU_SECRET_KEY=${{ secrets.DOKU_SECRET_KEY }}
          DOKU_IS_PRODUCTION=${{ secrets.DOKU_IS_PRODUCTION }}
          DOKU_PUBLIC_KEY=${{ secrets.DOKU_PUBLIC_KEY }}
          PASSPHRASE=${{ secrets.PASSPHRASE }}
          
          # AWS S3
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
          
          # Docker image
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          EOL

      - name: Copy .env file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.BIZNET_SSH_KEY }}
          source: ".env"
          target: "~/sentra-app"

      - name: Copy private key for DOKU
        if: "${{ secrets.DOKU_PRIVATE_KEY != '' }}"
        run: |
          echo "${{ secrets.DOKU_PRIVATE_KEY }}" > private.key

      - name: Copy DOKU key file
        if: "${{ secrets.DOKU_PRIVATE_KEY != '' }}"
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.BIZNET_SSH_KEY }}
          source: "private.key"
          target: "~/sentra-app"

      - name: Deploy to Biznet server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/sentra-app
            docker-compose pull
            docker-compose down
            docker-compose up -d